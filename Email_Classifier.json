{
  "name": "Email Classifier",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5934b14f-5742-4749-9ede-61424c05534c",
              "name": "Subject",
              "value": "={{ $json.subject }}",
              "type": "string"
            },
            {
              "id": "73577c99-825c-4440-8f6e-b0f105aea887",
              "name": "Content",
              "value": "={{ $json.bodyPreview }}",
              "type": "string"
            },
            {
              "id": "9b06db7d-9799-4a79-bffd-d19558cbb6c9",
              "name": "from_email",
              "value": "={{ $json.from }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        0
      ],
      "id": "c0c65758-829c-4fd9-9c45-626b5451c20f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Classify the email\n\nFrom Email: {{ $json.from_email }}\nSubject: {{ $json.Subject }}\nContent: {{ $json.Content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Role:\nYou are a helpful email classification agent. Your job is to read emails and classify whether they are responses from employers I have applied to in the past. **Crucially, you must focus on the *intent* of the message (e.g., job offer, interview request, application update) to determine if it is a job-related employer response. Also, You will analyze the email content including the subject field, content field, and from_email field to determine the employer.\n\nTask:\nYou will read the emails, and classify them based on whether they fit the criteria mentioned above or not.\n\nYou will respond in a structured json format with three variables:\n\"job_related\": True or False\n\"summary\": a summary of the email content and what the employer wants, if anything.\n\"employer\": The name of the company found in the email, or **\"N/A\"** if not a found."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        416,
        0
      ],
      "id": "c58b7b61-5475-4c82-8e0e-848b5a47abe4",
      "name": "AI Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"job_related\": {\n      \"type\": \"boolean\"\n    },\n\t\"summary\": {\n      \"type\": \"string\"\n    },\n    \"employer\": {\n      \"type\": \"string\"\n    }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        560,
        176
      ],
      "id": "dc96b4b1-a141-4c19-8936-695e86a6a9ae",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "c39f8178-bb68-461d-b4c0-43c5ac12db45",
              "leftValue": "={{ $json.job_related }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        976,
        0
      ],
      "id": "4da49592-9bbc-48ac-8bd7-550035028d15",
      "name": "If"
    },
    {
      "parameters": {
        "content": "# AI Agent\n\nThe AI agent reads the email and determines whether it is a respnse from an employer.\n\nIt will return two variables:\n\n\"job_related\": A boolean expression.\n\n\"reasoning\": Why the agent thinks the email is what it classified it as.",
        "height": 432,
        "width": 256,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -320
      ],
      "typeVersion": 1,
      "id": "18d1933a-6847-4bf5-892e-2b809e365c97",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Variable Creator\n\nThis will create 3 variables from the contents of the email trigger:\n\n\"Subject\": The subject of the email.\n\n\"Content\": The content of the email.\n\n\"from_email\": The email of the sender.",
        "height": 560,
        "width": 192
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -400
      ],
      "typeVersion": 1,
      "id": "c71498fd-e97d-4778-9c34-4e0f5b9b6af5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\nThis tool creates structured json variables from the output of the agent.",
        "height": 304,
        "width": 176,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        512,
        144
      ],
      "typeVersion": 1,
      "id": "d927f4bd-ec75-406c-afef-8a11bc15c586",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=",
        "options": {},
        "embeds": {
          "values": [
            {
              "description": "={{ $json.summary }}",
              "author": "={{ $json.employer }}\n{{ $today.format('MM/dd/yy') }}",
              "color": "#00FFDD",
              "timestamp": "=",
              "title": "=You got a response from {{ $json.employer }}!"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1200,
        -16
      ],
      "id": "56537570-f35f-4744-8de9-f41d2aec55d1",
      "name": "Discord",
      "webhookId": "2c8b808d-98d9-4410-a10f-3aedd7990fe5",
      "credentials": {
        "discordWebhookApi": {
          "id": "O4RijrVpWOr0XJum",
          "name": "Shadi Employer Responses Webhook"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftOutlookTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "aacad708-aeba-45ab-88f8-e452a595c482",
      "name": "Microsoft Outlook Trigger",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "GOuWfzWjy437iLUo",
          "name": "Shadi Microsoft Outlook account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e8310278-c943-488f-a4a3-6c38930dba08",
              "name": "employer",
              "value": "={{ $json.output.employer.type }}",
              "type": "string"
            },
            {
              "id": "bf520cf4-0ab5-4bb3-b1a9-2fa6f9906d39",
              "name": "summary",
              "value": "={{ $json.output.summary.type }}",
              "type": "string"
            },
            {
              "id": "07d593ec-ecea-4053-ba5f-cda8c021f3b2",
              "name": "job_related",
              "value": "={{ $json.output.job_related.type }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        768,
        0
      ],
      "id": "d475afe2-bf6f-45aa-a6f1-6a078c8296f6",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        416,
        176
      ],
      "id": "b1a03b02-d752-473e-a153-86c7dc2ffdf3",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "OWCaMrjAdYYMO4qj",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Variable Creator\n\nStructures the LLM response.",
        "height": 352,
        "width": 192,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -208
      ],
      "typeVersion": 1,
      "id": "32aaea1b-3e29-4edb-83a1-2768ab474803",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft Outlook Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2ebf2461-512f-413f-aaab-07d7d33107d2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0e09d0a72a0fb2c07d6d44ea8b72e2f592b2771ff995b4ccfd408e3416f75fb6"
  },
  "id": "iMNFCEZAOVcTapGZ",
  "tags": []
}
